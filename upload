#!/usr/bin/env bash

# ATTENTION:
# Before calling this script, the Arduino needs to be erased. Until we figure
# out how to do that automatically, doing it manually is a feasible workaround.
# Just make sure to press the tiny "Erase" button on the Arduino Due before
# uploading and everything should work.

# ATTENTION 2:
# At this point, the repository is in a weird transition state between having
# its own build system and making use of the Arduino IDE. Before this script can
# work, you need to do the following:
# 1. Open the Arduino sketch (blink/blink.ino) with the Arduino IDE and build
#    it.
# 2. Modify the two variables below, so they match the paths on your system.

# The following variables need to be modified for your system before the build
# can work.

# Installation directory of the Arduino IDE
ARDUINO_IDE=/home/hanno/Downloads/arduino-1.7.0-linux64

# The temporary directory where the Arduino IDE saves all files related the the
# build. You can find out the path of that directory by configuring the IDE to
# print verbose output. When you start a build, you should see a path like the
# one below being used.
ARDUINO_TMP=/tmp/build7671134933141820113.tmp/

# From here on out, the script *should* work without system-specific
# modifications.

arm-none-eabi-g++ \
	-c \
	-nostdlib \
	-mcpu=cortex-m3 \
	-mthumb \
	blink.c \
	-o blink.o &&

arm-none-eabi-gcc \
	-Wl,--gc-sections \
	-mcpu=cortex-m3 \
	-T$ARDUINO_IDE/hardware/arduino/sam/variants/arduino_due_x/linker_scripts/gcc/flash.ld \
	-L$ARDUINO_TMP \
	-mthumb \
	-Wl,--entry=Reset_Handler \
	-Wl,--start-group \
		$ARDUINO_TMP/syscalls_sam3.c.o \
		blink.o \
		$ARDUINO_TMP/variant.cpp.o \
		$ARDUINO_IDE/hardware/arduino/sam/variants/arduino_due_x/libsam_sam3x8e_gcc_rel.a \
		$ARDUINO_TMP/core.a \
	-Wl,--end-group \
	-lm \
	-o blink.elf &&

arm-none-eabi-objcopy \
	-O binary \
	blink.elf \
	blink.bin &&

bossac --write --verify --boot -R blink.bin
